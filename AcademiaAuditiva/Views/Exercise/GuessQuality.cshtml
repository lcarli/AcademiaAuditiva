@{
	ViewBag.Title = "Adivinhe a Qualidade do Acorde";
}

<div class="container mt-5">
	<div class="row justify-content-center exercise-content" style="display:none">
		<div class="col-md-8">
			<h2 class="text-center mb-4">Adivinhe a Qualidade do Acorde</h2>

			<div class="mb-4 text-center d-flex justify-content-center">
				<div class="mb-4 me-4">
					<label for="octaveRange" class="form-label">Selecionar Oitava</label>
					<select id="octaveRange" class="form-select">
						<option value="single">Uma Oitava (4ª Oitava)</option>
						<option value="full">Piano Completo</option>
					</select>
				</div>

				<div class="mb-4">
					<label for="chordType" class="form-label">Tipo de Acorde</label>
					<select id="chordType" class="form-select">
						<option value="major">Maiores</option>
						<option value="minor">Menores</option>
						<option value="all">Todos</option>
					</select>
				</div>
			</div>

			<div class="mb-4 text-center">
				<button id="playChord" class="btn btn-primary me-3">Ouvir Acorde</button>
				<button id="replayChord" class="btn btn-secondary">Reouvir Acorde</button>
			</div>

			<h4 class="text-center mb-3">Qual a qualidade do acorde tocado?</h4>

			<!-- Função do Acorde -->
			<div class="d-grid gap-2 d-md-flex justify-content-md-center mt-3">
				<button class="btn btn-outline-dark guessFunction" data-function="major">M</button>
				<button class="btn btn-outline-dark guessFunction" data-function="major7">M7</button>
				<button class="btn btn-outline-dark guessFunction" data-function="minor">m</button>
				<button class="btn btn-outline-dark guessFunction" data-function="minor7">m7</button>
				<button class="btn btn-outline-dark guessFunction" data-function="diminished">dim</button>
				<button class="btn btn-outline-dark guessFunction" data-function="diminished7">7dim</button>
			</div>

			<div class="d-grid gap-2 d-md-flex justify-content-md-center mt-3">
				<button id="validateGuess" class="btn btn-warning">Validar</button>
			</div>

			<div class="scoreboard text-center my-4">
				<div class="d-inline-block mx-3">
					<h5>Acertos</h5>
					<span id="correctCount">0</span>
				</div>
				<div class="d-inline-block mx-3">
					<h5>Erros</h5>
					<span id="errorCount">0</span>
				</div>
				<div class="d-inline-block mx-3">
					<h5>Melhor Pontuação</h5>
					<span id="bestScore">@ViewBag.BestScore</span>
				</div>
			</div>
		</div>
	</div>
</div>


@section Scripts {
	<script>
		$(document).ready(function () {
			AcademiaAuditiva.init();
			Swal.fire({
				title: 'Adivinhe a Qualidade do Acorde',
				text: 'Ouça o acorde e tente adivinhar se ele é maior, menor, com sétima ou diminuto.',
				icon: 'info',
				confirmButtonText: 'Começar',
				allowOutsideClick: false
			}).then((result) => {
				if (result.isConfirmed) {
					$('.exercise-content').show(); // Mostrando o conteúdo do exercício
				}
			});

			let correctCount = 0;
			let errorCount = 0;
			let chordFunction;
			let allChords;
			let randomChord;
			let octaveRange = "single";

			const correctSpan = document.getElementById('correctCount');
			const errorSpan = document.getElementById('errorCount');

			document.getElementById('octaveRange').addEventListener('change', (e) => {
				octaveRange = e.target.value;
			});

			function getRandomQualityChord() {
				allChords = (octaveRange === "single")
					? AcademiaAuditiva.getAllChords(4)
					: AcademiaAuditiva.getAllChords();

				const chordType = document.getElementById('chordType').value;

				const filteredChords = allChords.filter(chord => {
					if (chordType === "major") {
						return ["major", "major7"].includes(chord.type);
					} else if (chordType === "minor") {
						return ["minor", "minor7", "diminished", "diminished7"].includes(chord.type);
					} else { // Caso "all"
						return ["major", "minor", "diminished", "major7", "minor7", "diminished7"].includes(chord.type);
					}
				});

				const randomChordObj = filteredChords[Math.floor(Math.random() * filteredChords.length)];
				return { notes: randomChordObj.notes, type: randomChordObj.type };
			}

			document.getElementById('playChord').addEventListener('click', () => {
				const chordObj = getRandomQualityChord();
				randomChord = `${chordObj.notes[0]}-${chordObj.type}`; // Para verificação posterior
				chordFunction = chordObj.type;
				// Tocando o acorde inteiro
				AcademiaAuditiva.sampler.triggerAttackRelease(chordObj.notes, "1");
			});

			document.getElementById('replayChord').addEventListener('click', () => {
				if (randomChord) {
					const [note, quality] = randomChord.split('-');
					const chordNotes = allChords.find(chord => chord.type === quality && chord.notes[0] === note).notes;
					AcademiaAuditiva.sampler.triggerAttackRelease(chordNotes, "1");
				} else {
					alert('Primeiro clique em "Ouvir Acorde"');
				}
			});

			function checkGuess() {
				const correctCountEl = document.getElementById('correctCount');
				const errorCountEl = document.getElementById('errorCount');
				const bestScoreEl = document.getElementById('bestScore');

				if (guessedFunction === chordFunction) {
					correctCountEl.innerText = parseInt(correctCountEl.innerText) + 1;
					Swal.fire({
						icon: 'success',
						title: 'Correto!',
						text: 'Você acertou a qualidade do acorde!'
					});
				} else {
					errorCountEl.innerText = parseInt(errorCountEl.innerText) + 1;
					Swal.fire({
						icon: 'error',
						title: 'Errado!',
						text: `Você errou! A qualidade correta era ${chordFunction}.`,
					});
				}

				//clean
				chordFunction = '';
				guessedFunction = '';

				// After showing the result, save the score on the server:
				const correctCount = parseInt(correctCountEl.innerText);
				const errorCount = parseInt(errorCountEl.innerText);
				let bestScore = parseInt(bestScoreEl.innerText);
				const currentScore = correctCount - errorCount;

				if (currentScore > bestScore) {
					bestScore = currentScore;
					bestScoreEl.innerText = bestScore;  // Atualiza o elemento HTML

					$.ajax({
						type: "POST",
						url: "/Exercise/GuessQualityChordsSaveScore",
						data: { correctCount: correctCount, errorCount: errorCount },
						error: function () {
							console.error('Erro ao comunicar com o servidor. A pontuação não foi salva.');
						}
					});
				}
			}

			const guessButtons = document.querySelectorAll('.guessFunction');
			for (let button of guessButtons) {
				button.addEventListener('click', function (event) {
					guessedFunction = event.target.getAttribute('data-function');  // Update guessedFunction
				});
			}

			document.getElementById('validateGuess').addEventListener('click', () => {
				if (guessedFunction && chordFunction) {
					checkGuess();
				} else {
					Swal.fire({
						icon: 'warning',
						title: 'Incompleto!',
						text: 'Por favor, selecione uma função do acorde.'
					});
				}
			});


		});

	</script>
}
