@using AcademiaAuditiva.Extensions
@model IEnumerable<AcademiaAuditiva.Models.Exercise>

@{
	ViewBag.Title = Localizer["Exercise.Header"];
}

<div class="container mt-5">
	<h2 class="text-center mb-4">@Localizer["Exercise.Title"]</h2>

	<ul class="nav nav-tabs justify-content-center" id="exerciseTabs" role="tablist">
		<li class="nav-item" role="presentation">
			<button class="nav-link active" id="difficulty-tab" data-bs-toggle="tab" data-bs-target="#byDifficulty" type="button" role="tab">@Localizer["Exercise.Tab1.Level"]</button>
		</li>
		<li class="nav-item" role="presentation">
			<button class="nav-link" id="type-tab" data-bs-toggle="tab" data-bs-target="#byType" type="button" role="tab">@Localizer["Exercise.Tab2.Type"]</button>
		</li>
	</ul>

	<div class="tab-content mt-4" id="exerciseTabsContent">
		<!-- Aba por Dificuldade -->
		<div class="tab-pane fade show active" id="byDifficulty" role="tabpanel">
			@foreach (var level in Enum.GetValues(typeof(DifficultyLevel)))
			{
				var levelName = "Exercise." + level;
				<div class="mb-4">
					<h4 class="text-primary mb-3">@Localizer[levelName]</h4>
					<div class="row g-4">
						@foreach (var exercise in Model.Where(e => e.Difficulty == (DifficultyLevel)level))
						{
							<div class="col-md-4">
								<div class="card shadow-sm h-100 border-0">
									<div class="card-body">
										<h5 class="card-title">@Localizer[exercise.Name]</h5>
										<p class="card-subtitle mb-2 text-muted">
											🎯 @Localizer["ExerciseType." + exercise.Type] <br />
										</p>
										<p class="card-text small text-muted">
											@exercise.Description
										</p>
										<a href="@Url.Action(exercise.Name, "Exercise")" class="btn btn-sm btn-primary">@Localizer["Exercise.Start"]</a>
									</div>
								</div>
							</div>
						}
					</div>
				</div>
			}
		</div>

		<!-- Aba por Tipo -->
		<div class="tab-pane fade" id="byType" role="tabpanel">
			@foreach (var type in Enum.GetValues(typeof(ExerciseType)))
			{
				var typeName = "ExerciseType." + type;
				<div class="mb-4">
					<h4 class="text-primary mb-3">@Localizer[typeName]</h4>
					<div class="row g-4">
						@foreach (var exercise in Model.Where(e => e.Type == (ExerciseType)type))
						{
							<div class="col-md-4">
								<div class="card shadow-sm h-100 border-0">
									<div class="card-body">
										<h5 class="card-title">@Localizer[exercise.Name]</h5>
										<p class="card-subtitle mb-2 text-muted">
											🧩 @Localizer["Exercise." + exercise.Difficulty]
										</p>
										<p class="card-text small text-muted">
											@exercise.Description
										</p>
										<a href="@Url.Action(exercise.Name, "Exercise")" class="btn btn-sm btn-primary">@Localizer["Exercise.Start"]</a>
									</div>
								</div>
							</div>
						}
					</div>
				</div>
			}
		</div>
	</div>
</div>