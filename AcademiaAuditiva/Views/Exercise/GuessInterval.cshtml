@{
	ViewBag.Title = "Adivinhe o Intervalo";
}

<div class="container mt-5">
	<div class="row justify-content-center exercise-content" style="display:none">
		<div class="col-md-8">
			<h2 class="text-center mb-4">Adivinhe o Intervalo</h2>

			<div class="mb-4 text-center d-flex justify-content-center">
				<!-- Dropdown para escolher Tom -->
				<div class="mb-4 me-4">
					<!-- Adicionado me-4 para espaço à direita -->
					<label for="keySelect" class="form-label">Selecione o Tom</label>
					<select id="keySelect" class="form-select">
						<option value="C4">C</option>
						<option value="C#4">C#</option>
						<option value="D4">D</option>
						<option value="D#4">D#</option>
						<option value="E4">E</option>
						<option value="F4">F</option>
						<option value="F#4">F#</option>
						<option value="G4">G</option>
						<option value="G#4">G#</option>
						<option value="A4">A</option>
						<option value="A#4">A#</option>
						<option value="E4">E</option> <!-- Parece que você tem duas opções "E4", talvez seja um erro? -->
					</select>
				</div>

				<!-- Dropdown para escolher Tipo de Escala -->
				<div class="mb-4">
					<label for="scaleTypeSelect" class="form-label">Selecione a Escala</label>
					<select id="scaleTypeSelect" class="form-select">
						<option value="major">Maior</option>
						<option value="minor">Menor</option>
					</select>
				</div>
			</div>


			<div class="mb-4 text-center">
				<button id="playInterval" class="btn btn-primary me-3">Tocar Intervalo</button>
				<button id="listenNote1" class="btn btn-outline-primary me-3">Ouvir Nota 1</button>
				<button id="listenNote2" class="btn btn-outline-primary me-3">Ouvir Nota 2</button>
				<button id="replayInterval" class="btn btn-secondary">Ouvir Intervalo</button>
			</div>

			<h4 class="text-center mb-3">Qual foi o intervalo tocado?</h4>

			<div class="d-grid gap-2 d-md-flex justify-content-md-center">
				<button class="btn btn-outline-dark guessInterval" data-interval="2">2ª</button>
				<button class="btn btn-outline-dark guessInterval" data-interval="3">3ª</button>
				<button class="btn btn-outline-dark guessInterval" data-interval="4">4ª</button>
				<button class="btn btn-outline-dark guessInterval" data-interval="5">5ª</button>
				<button class="btn btn-outline-dark guessInterval" data-interval="6">6ª</button>
				<button class="btn btn-outline-dark guessInterval" data-interval="7">7ª</button>
				<button class="btn btn-outline-dark guessInterval" data-interval="8">8ª</button>
			</div>

			<div class="d-grid gap-2 d-md-flex justify-content-md-center mt-3">
				<button id="validateGuess" class="btn btn-warning">Validar</button>
			</div>
		</div>
		<div class="scoreboard text-center my-4">
			<div class="d-inline-block mx-3">
				<h5>Acertos</h5>
				<span id="correctCount">0</span>
			</div>
			<div class="d-inline-block mx-3">
				<h5>Erros</h5>
				<span id="errorCount">0</span>
			</div>
			<div class="d-inline-block mx-3">
				<h5>Melhor Pontuação</h5>
				<span id="bestScore">@ViewBag.BestScore</span>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		$(document).ready(function () {
			AcademiaAuditiva.init();
			Swal.fire({
				title: 'Adivinhe o Intervalo',
				text: 'Ouça o intervalo e tente adivinhar qual é. Você precisa selecionar o intervalo entre as duas notas tocadas.',
				icon: 'info',
				confirmButtonText: 'Começar',
				allowOutsideClick: false
			}).then((result) => {
				if (result.isConfirmed) {
					$('.exercise-content').show();
				}
			});

			let randomInterval = "";
			let randomDistance = "";
			let baseNote = "";

			function getRandomInterval() {
				// Pegando a seleção do usuário
				const key = document.getElementById('keySelect').value;
				const scaleType = document.getElementById('scaleTypeSelect').value;

				// Procura a escala correspondente usando o método getAllScales.
				const scales = AcademiaAuditiva.getAllScales(); // Assumindo que getAllScales está no mesmo contexto
				const matchingScales = scales.filter(scale => scale.type.toLowerCase() === scaleType.toLowerCase() && scale.notes[0] === key);

				if (matchingScales.length === 0) {
					console.error("Escala não encontrada.");
					return null;
				}

				let scaleNotes = matchingScales[0].notes;

				// Seleciona uma nota base e um intervalo aleatório dentro da escala
				baseNote = scaleNotes[0];
				randomDistance = Math.floor(Math.random() * (scaleNotes.length - 1)) + 1; // De 1 até o tamanho da escala - 1
				const intervalNote = scaleNotes[(scaleNotes.indexOf(baseNote) + randomDistance) % scaleNotes.length];

				return [baseNote, intervalNote];
			}



			document.getElementById('playInterval').addEventListener('click', () => {
				const [base, interval] = getRandomInterval();
				randomInterval = interval;
				AcademiaAuditiva.sampler.triggerAttackRelease(base, "1");
				setTimeout(() => {
					AcademiaAuditiva.sampler.triggerAttackRelease(interval, "1");
				}, 1000); // Reproduz a segunda nota após 1 segundo.
			});

			document.getElementById('replayInterval').addEventListener('click', () => {
				if (randomInterval) {
					AcademiaAuditiva.sampler.triggerAttackRelease(baseNote, "1");
					setTimeout(() => {
						AcademiaAuditiva.sampler.triggerAttackRelease(randomInterval, "1");
					}, 1000); // Reproduz a segunda nota após 1 segundo.
				} else {
					alert('Primeiro clique em "Ouvir Intervalo"');
				}
			});

			// Adicionar ações para ouvir nota 1 e nota 2 individualmente
			document.getElementById('listenNote1').addEventListener('click', () => {
				if (baseNote) {
					AcademiaAuditiva.sampler.triggerAttackRelease(baseNote, "1");
				} else {
					alert('Primeiro clique em "Ouvir Intervalo"');
				}
			});

			document.getElementById('listenNote2').addEventListener('click', () => {
				if (randomInterval) {
					AcademiaAuditiva.sampler.triggerAttackRelease(randomInterval, "1");
				} else {
					alert('Primeiro clique em "Ouvir Intervalo"');
				}
			});

			const intervalButtons = document.querySelectorAll('.guessInterval');
			let guessedInterval = '';

			intervalButtons.forEach(button => {
				button.addEventListener('click', (e) => {
					intervalButtons.forEach(btn => btn.classList.remove('selected'));
					e.target.classList.add('selected');
					guessedInterval = parseInt(e.target.getAttribute('data-interval'), 10);
					e.stopImmediatePropagation();
				});
			});

			function checkGuess() {
				const correctCountEl = document.getElementById('correctCount');
				const errorCountEl = document.getElementById('errorCount');
				const bestScoreEl = document.getElementById('bestScore');

				if (guessedInterval === (randomDistance + 1)) {
					correctCountEl.innerText = parseInt(correctCountEl.innerText) + 1;
					Swal.fire({
						icon: 'success',
						title: 'Correto!',
						text: 'Você acertou o intervalo!'
					});
				} else {
					errorCountEl.innerText = parseInt(errorCountEl.innerText) + 1;
					Swal.fire({
						icon: 'error',
						title: 'Errado!',
						text: `Você errou! O intervalo correto era ${randomDistance}ª.`
					});
				}

				//Clean
				randomDistance = '';
				intervalButtons.forEach(btn => btn.classList.remove('selected'));


				const correctCount = parseInt(correctCountEl.innerText);
				const errorCount = parseInt(errorCountEl.innerText);
				let bestScore = parseInt(bestScoreEl.innerText);
				const currentScore = correctCount - errorCount;

				if (currentScore > bestScore) {
					bestScore = currentScore;
					bestScoreEl.innerText = bestScore;  // Atualiza o elemento HTML

					$.ajax({
						type: "POST",
						url: "/Exercise/GuessIntervalSaveScore",
						data: { correctCount: correctCount, errorCount: errorCount },
						error: function () {
							console.error('Erro ao comunicar com o servidor. A pontuação não foi salva.');
						}
					});
				}
			}

			document.getElementById('validateGuess').addEventListener('click', () => {
				if (guessedInterval && randomDistance) {
					checkGuess();
				} else {
					Swal.fire({
						icon: 'warning',
						title: 'Incompleto!',
						text: 'Por favor, selecione um intervalo.'
					});
				}
			});

		});
	</script>
}
