@{
	ViewBag.Title = "Adivinhe o Acorde";
}

<div class="container mt-5">
	<div class="row justify-content-center exercise-content" style="display:none">
		<div class="col-md-8">
			<h2 class="text-center mb-4">Adivinhe o Acorde</h2>

			<!-- Oitava e Tipo de Acorde -->
			<div class="mb-4">
				<label for="octaveRange" class="form-label">Selecionar Oitava</label>
				<select id="octaveRange" class="form-select">
					<option value="single">Uma Oitava (4ª Oitava)</option>
					<option value="full">Piano Completo</option>
				</select>
			</div>

			<div class="mb-4">
				<label for="chordType" class="form-label">Tipo de Acorde</label>
				<select id="chordType" class="form-select">
					<option value="major">Maiores</option>
					<option value="minor">Menores</option>
					<option value="both">Maiores e Menores</option>
					<option value="all">Todos</option>
				</select>
			</div>

			<div class="mb-4 text-center">
				<button id="playChord" class="btn btn-primary me-3">Ouvir Acorde</button>
				<button id="replayChord" class="btn btn-secondary">Reouvir Acorde</button>
			</div>

			<h4 class="text-center mb-3">Qual acorde foi tocado?</h4>

			<!-- Notas -->
			<div class="d-grid gap-2 d-md-flex justify-content-md-center">
				<button class="btn btn-outline-dark guessNote" data-note="C4">C</button>
				<button class="btn btn-outline-dark guessNote" data-note="Cs4">C#</button>
				<button class="btn btn-outline-dark guessNote" data-note="D4">D</button>
				<button class="btn btn-outline-dark guessNote" data-note="Ds4">D#</button>
				<button class="btn btn-outline-dark guessNote" data-note="E4">E</button>
				<button class="btn btn-outline-dark guessNote" data-note="F4">F</button>
				<button class="btn btn-outline-dark guessNote" data-note="Fs4">F#</button>
				<button class="btn btn-outline-dark guessNote" data-note="G4">G</button>
				<button class="btn btn-outline-dark guessNote" data-note="Gs4">G#</button>
				<button class="btn btn-outline-dark guessNote" data-note="A4">A</button>
				<button class="btn btn-outline-dark guessNote" data-note="As4">A#</button>
				<button class="btn btn-outline-dark guessNote" data-note="B4">B</button>
			</div>

			<!-- Qualidade do Acorde -->
			<div class="d-grid gap-2 d-md-flex justify-content-md-center mt-3">
				<button class="btn btn-outline-dark guessQuality" data-quality="major">Maior</button>
				<button class="btn btn-outline-dark guessQuality" data-quality="minor">Menor</button>
				<button class="btn btn-outline-dark guessQuality" data-quality="7">7ª</button>
				<button class="btn btn-outline-dark guessQuality" data-quality="9">9ª</button>
			</div>
			<div class="d-grid gap-2 d-md-flex justify-content-md-center mt-3">
				<button id="validateGuess" class="btn btn-warning">Validar</button>
			</div>
		</div>
		<div class="scoreboard text-center my-4">
			<div class="d-inline-block mx-3">
				<h5>Acertos</h5>
				<span id="correctCount">0</span>
			</div>
			<div class="d-inline-block mx-3">
				<h5>Erros</h5>
				<span id="errorCount">0</span>
			</div>
			<div class="d-inline-block mx-3">
				<h5>Melhor Pontuação</h5>
				<span id="bestScore">@ViewBag.BestScore</span>
			</div>
		</div>

	</div>
</div>

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/tone@latest"></script>
	<script>
		$(document).ready(function () {

			Swal.fire({
				title: 'Adivinhe o Acorde',
				text: 'Ouça o acorde e tente adivinhar qual é. Voce precisa selecionar o tom e a qualidade do acorde',
				icon: 'info',
				confirmButtonText: 'Começar',
				allowOutsideClick: false
			}).then((result) => {
				if (result.isConfirmed) {
					$('.exercise-content').show(); // Mostrando o conteúdo do exercício
				}
			});

			let randomChord = "";
			let allChords = "";
			let octaveRange = "single";
			let chordType = "major";

			function getRandomChord() {
				allChords = (octaveRange === "single")
					? AcademiaAuditiva.getAllChords(4)
					: AcademiaAuditiva.getAllNotes();

				const filteredChords = allChords.filter(chord => {
					if (chordType === "major") {
						return chord.type === "major";
					} else if (chordType === "minor") {
						return chord.type === "minor";
					} else if (chordType === "both") {
						return ["major", "minor"].includes(chord.type);
					} else {
						return ["major", "minor"].includes(chord.type);
					}
				});

				const randomChordObj = filteredChords[Math.floor(Math.random() * filteredChords.length)];
				return { notes: randomChordObj.notes, type: randomChordObj.type };
			}

			document.getElementById('playChord').addEventListener('click', () => {
				const chordObj = getRandomChord();
				randomChord = `${chordObj.notes[0]}-${chordObj.type}`; // Para verificação posterior

				// Tocando o acorde inteiro
				AcademiaAuditiva.sampler.triggerAttackRelease(chordObj.notes, "1");
			});

			document.getElementById('replayChord').addEventListener('click', () => {
				if (randomChord) {
					const [note, quality] = randomChord.split('-');
					const chordNotes = allChords.find(chord => chord.type === quality && chord.notes[0] === note).notes;
					AcademiaAuditiva.sampler.triggerAttackRelease(chordNotes, "1");
				} else {
					alert('Primeiro clique em "Ouvir Acorde"');
				}
			});

			document.getElementById('octaveRange').addEventListener('change', (e) => {
				octaveRange = e.target.value;
			});

			document.getElementById('chordType').addEventListener('change', (e) => {
				chordType = e.target.value;
			});

			const noteButtons = document.querySelectorAll('.guessNote');
			const qualityButtons = document.querySelectorAll('.guessQuality');
			let guessedNote = '';
			let guessedQuality = '';

			noteButtons.forEach(button => {
				button.addEventListener('click', (e) => {
					// Remover a classe 'selected' de todos os botões de nota
					noteButtons.forEach(btn => btn.classList.remove('selected'));

					// Adicionar a classe 'selected' ao botão clicado
					e.target.classList.add('selected');

					guessedNote = e.target.getAttribute('data-note');

					e.stopImmediatePropagation();
				});
			});

			qualityButtons.forEach(button => {
				button.addEventListener('click', (e) => {
					// Remover a classe 'selected' de todos os botões de qualidade
					qualityButtons.forEach(btn => btn.classList.remove('selected'));

					// Adicionar a classe 'selected' ao botão clicado
					e.target.classList.add('selected');

					guessedQuality = e.target.getAttribute('data-quality');

					e.stopImmediatePropagation();
				});
			});;

			function checkGuess() {
				const correctCountEl = document.getElementById('correctCount');
				const errorCountEl = document.getElementById('errorCount');

				if (`${guessedNote}-${guessedQuality}` === randomChord) {
					correctCountEl.innerText = parseInt(correctCountEl.innerText) + 1;
					Swal.fire({
						icon: 'success',
						title: 'Correto!',
						text: 'Você acertou o acorde!'
					});
				} else {
					errorCountEl.innerText = parseInt(errorCountEl.innerText) + 1;
					const [correctNote, correctQuality] = randomChord.split('-');
					Swal.fire({
						icon: 'error',
						title: 'Errado!',
						text: `Você errou! O acorde correto era ${correctNote.replace('s', '#')} ${correctQuality}.`,
					});
				}

				// After showing the result, save the score on the server:
				const correctCount = parseInt(correctCountEl.innerText);
				const errorCount = parseInt(errorCountEl.innerText);

				$.ajax({
					type: "POST",
					url: "/Exercise/GuessChordsSaveScore",
					data: { correctCount: correctCount, errorCount: errorCount },
					error: function () {
						console.error('Erro ao comunicar com o servidor. A pontuação não foi salva.');
					}
				});
			}

			document.getElementById('validateGuess').addEventListener('click', () => {
				if (guessedNote && guessedQuality) {
					checkGuess();
				} else {
					Swal.fire({
						icon: 'warning',
						title: 'Incompleto!',
						text: 'Por favor, selecione uma nota e uma qualidade de acorde.'
					});
				}
			});

		});
	</script>
}
